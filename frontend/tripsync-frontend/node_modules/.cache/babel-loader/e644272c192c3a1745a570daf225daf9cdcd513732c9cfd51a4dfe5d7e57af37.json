{"ast":null,"code":"var _jsxFileName = \"D:\\\\node projects\\\\TripSync\\\\frontend\\\\tripsync-frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute() {\n  _s();\n  const {\n    isAuthenticated\n  } = useAuth();\n  if (!isAuthenticated) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 8\n  }, this);\n}\n_s(ProtectedRoute, \"1LGxUrjNz4q7iKM/2JDC9lJQ3xY=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","Outlet","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","_s","isAuthenticated","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/node projects/TripSync/frontend/tripsync-frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":[" import { Navigate, Outlet } from \"react-router-dom\"; \r\nimport { useAuth } from \"../context/AuthContext\"; \r\nexport default function ProtectedRoute() { \r\nconst { isAuthenticated } = useAuth(); \r\nif (!isAuthenticated) return <Navigate to=\"/login\" replace />; \r\nreturn <Outlet />; \r\n}"],"mappings":";;AAAC,SAASA,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACpD,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAgB,CAAC,GAAGL,OAAO,CAAC,CAAC;EACrC,IAAI,CAACK,eAAe,EAAE,oBAAOH,OAAA,CAACJ,QAAQ;IAACQ,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC7D,oBAAOT,OAAA,CAACH,MAAM;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjB;AAACP,EAAA,CAJuBD,cAAc;EAAA,QACVH,OAAO;AAAA;AAAAY,EAAA,GADXT,cAAc;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}