{"ast":null,"code":"var _jsxFileName = \"D:\\\\node projects\\\\TripSync\\\\frontend\\\\tripsync-frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useContext, useEffect, useState } from \"react\"; \n// import api from \"../lib/api\"; \n// const AuthContext = createContext(); \n// export function AuthProvider({ children }) { \n//   const [user, setUser] = useState(() => { \n//     const raw = localStorage.getItem(\"ts_user\"); \n//     return raw ? JSON.parse(raw) : null; \n//   }); \n//   const isAuthenticated = Boolean(user); \n//   const login = async (email, password) => { \n//     const { data } = await api.post(\"/auth/login\", { email, password }); \n//     localStorage.setItem(\"ts_access_token\", data.accessToken); \n//     localStorage.setItem(\"ts_user\", JSON.stringify(data.user)); \n//     setUser(data.user); \n//   }; \n//   const register = async (name, email, password) => { \n//     const { data } = await api.post(\"/auth/register\", { name, email, password }); \n//     localStorage.setItem(\"ts_access_token\", data.accessToken); \n//     localStorage.setItem(\"ts_user\", JSON.stringify(data.user)); \n//     setUser(data.user); \n//   }; \n//   const logout = async () => { \n//     try { \n//       await api.post(\"/auth/logout\"); \n//     } catch { \n//       // ignore \n//     } finally { \n//       localStorage.removeItem(\"ts_access_token\"); \n//       localStorage.removeItem(\"ts_user\"); \n//       setUser(null); \n//     } \n//   }; \n//   useEffect(() => {\n//     const onStorage = () => { \n//       const raw = localStorage.getItem(\"ts_user\"); \n//       setUser(raw ? JSON.parse(raw) : null); \n//     }; \n//     window.addEventListener(\"storage\", onStorage); \n//     return () => window.removeEventListener(\"storage\", onStorage); \n//   }, []); \n//   return ( \n//     <AuthContext.Provider value={{ isAuthenticated, user, login, register, logout }}> \n// {children} \n// </AuthContext.Provider> \n// ); \n// } \n// export const useAuth = () => useContext(AuthContext);\n\n//shreyansh change it\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport api from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(() => {\n    const raw = localStorage.getItem(\"ts_user\");\n    return raw ? JSON.parse(raw) : null;\n  });\n  const isAuthenticated = Boolean(user);\n  const login = async (email, password) => {\n    var _res$data;\n    const res = await api.post(\"/auth/login\", {\n      email,\n      password\n    });\n    const payload = (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.data) || (res === null || res === void 0 ? void 0 : res.data) || {}; // ðŸ‘ˆ handle nested\n    const accessToken = payload.accessToken;\n    const u = payload.user;\n    if (!accessToken || !u) {\n      throw new Error(\"Malformed login response\");\n    }\n    localStorage.setItem(\"ts_access_token\", accessToken);\n    localStorage.setItem(\"ts_user\", JSON.stringify(u));\n    setUser(u);\n  };\n  const register = async (name, email, password) => {\n    var _res$data2;\n    const res = await api.post(\"/auth/register\", {\n      name,\n      email,\n      password\n    });\n    const payload = (res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.data) || (res === null || res === void 0 ? void 0 : res.data) || {};\n    const accessToken = payload.accessToken;\n    const u = payload.user;\n    if (!accessToken || !u) {\n      throw new Error(\"Malformed register response\");\n    }\n    localStorage.setItem(\"ts_access_token\", accessToken);\n    localStorage.setItem(\"ts_user\", JSON.stringify(u));\n    setUser(u);\n  };\n  const logout = async () => {\n    try {\n      await api.post(\"/auth/logout\", {\n        // optional: include refreshToken if you store it\n        refreshToken: localStorage.getItem(\"ts_refresh_token\")\n      });\n    } catch {\n      // ignore\n    } finally {\n      localStorage.removeItem(\"ts_access_token\");\n      localStorage.removeItem(\"ts_refresh_token\");\n      localStorage.removeItem(\"ts_user\");\n      setUser(null);\n    }\n  };\n  useEffect(() => {\n    const onStorage = () => {\n      const raw = localStorage.getItem(\"ts_user\");\n      setUser(raw ? JSON.parse(raw) : null);\n    };\n    window.addEventListener(\"storage\", onStorage);\n    return () => window.removeEventListener(\"storage\", onStorage);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"arS+iT9ni0PbZCgm9jLougbV7rk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","raw","localStorage","getItem","JSON","parse","isAuthenticated","Boolean","login","email","password","_res$data","res","post","payload","data","accessToken","u","Error","setItem","stringify","register","name","_res$data2","logout","refreshToken","removeItem","onStorage","window","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/node projects/TripSync/frontend/tripsync-frontend/src/context/AuthContext.jsx"],"sourcesContent":["// import React, { createContext, useContext, useEffect, useState } from \"react\"; \r\n// import api from \"../lib/api\"; \r\n// const AuthContext = createContext(); \r\n// export function AuthProvider({ children }) { \r\n//   const [user, setUser] = useState(() => { \r\n//     const raw = localStorage.getItem(\"ts_user\"); \r\n//     return raw ? JSON.parse(raw) : null; \r\n//   }); \r\n//   const isAuthenticated = Boolean(user); \r\n//   const login = async (email, password) => { \r\n//     const { data } = await api.post(\"/auth/login\", { email, password }); \r\n//     localStorage.setItem(\"ts_access_token\", data.accessToken); \r\n//     localStorage.setItem(\"ts_user\", JSON.stringify(data.user)); \r\n//     setUser(data.user); \r\n//   }; \r\n//   const register = async (name, email, password) => { \r\n//     const { data } = await api.post(\"/auth/register\", { name, email, password }); \r\n//     localStorage.setItem(\"ts_access_token\", data.accessToken); \r\n//     localStorage.setItem(\"ts_user\", JSON.stringify(data.user)); \r\n//     setUser(data.user); \r\n//   }; \r\n//   const logout = async () => { \r\n//     try { \r\n//       await api.post(\"/auth/logout\"); \r\n//     } catch { \r\n//       // ignore \r\n//     } finally { \r\n//       localStorage.removeItem(\"ts_access_token\"); \r\n//       localStorage.removeItem(\"ts_user\"); \r\n//       setUser(null); \r\n//     } \r\n//   }; \r\n//   useEffect(() => {\r\n//     const onStorage = () => { \r\n//       const raw = localStorage.getItem(\"ts_user\"); \r\n//       setUser(raw ? JSON.parse(raw) : null); \r\n//     }; \r\n//     window.addEventListener(\"storage\", onStorage); \r\n//     return () => window.removeEventListener(\"storage\", onStorage); \r\n//   }, []); \r\n//   return ( \r\n//     <AuthContext.Provider value={{ isAuthenticated, user, login, register, logout }}> \r\n// {children} \r\n// </AuthContext.Provider> \r\n// ); \r\n// } \r\n// export const useAuth = () => useContext(AuthContext);\r\n\r\n//shreyansh change it\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport api from \"../lib/api\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(() => {\r\n    const raw = localStorage.getItem(\"ts_user\");\r\n    return raw ? JSON.parse(raw) : null;\r\n  });\r\n\r\n  const isAuthenticated = Boolean(user);\r\n\r\n  const login = async (email, password) => {\r\n    const res = await api.post(\"/auth/login\", { email, password });\r\n    const payload = res?.data?.data || res?.data || {}; // ðŸ‘ˆ handle nested\r\n    const accessToken = payload.accessToken;\r\n    const u = payload.user;\r\n\r\n    if (!accessToken || !u) {\r\n      throw new Error(\"Malformed login response\");\r\n    }\r\n\r\n    localStorage.setItem(\"ts_access_token\", accessToken);\r\n    localStorage.setItem(\"ts_user\", JSON.stringify(u));\r\n    setUser(u);\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    const res = await api.post(\"/auth/register\", { name, email, password });\r\n    const payload = res?.data?.data || res?.data || {};\r\n    const accessToken = payload.accessToken;\r\n    const u = payload.user;\r\n\r\n    if (!accessToken || !u) {\r\n      throw new Error(\"Malformed register response\");\r\n    }\r\n\r\n    localStorage.setItem(\"ts_access_token\", accessToken);\r\n    localStorage.setItem(\"ts_user\", JSON.stringify(u));\r\n    setUser(u);\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await api.post(\"/auth/logout\", {\r\n        // optional: include refreshToken if you store it\r\n        refreshToken: localStorage.getItem(\"ts_refresh_token\"),\r\n      });\r\n    } catch {\r\n      // ignore\r\n    } finally {\r\n      localStorage.removeItem(\"ts_access_token\");\r\n      localStorage.removeItem(\"ts_refresh_token\");\r\n      localStorage.removeItem(\"ts_user\");\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const onStorage = () => {\r\n      const raw = localStorage.getItem(\"ts_user\");\r\n      setUser(raw ? JSON.parse(raw) : null);\r\n    };\r\n    window.addEventListener(\"storage\", onStorage);\r\n    return () => window.removeEventListener(\"storage\", onStorage);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}