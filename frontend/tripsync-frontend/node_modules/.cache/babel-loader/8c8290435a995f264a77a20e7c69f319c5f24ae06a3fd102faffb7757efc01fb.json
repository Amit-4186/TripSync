{"ast":null,"code":"var _jsxFileName = \"D:\\\\node projects\\\\TripSync\\\\frontend\\\\tripsync-frontend\\\\src\\\\index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n//// If you want to start measuring performance in your app, pass a function\n//// to log results (for example: reportWebVitals(console.log))\n//// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport api from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(() => {\n    const raw = localStorage.getItem(\"ts_user\");\n    return raw ? JSON.parse(raw) : null;\n  });\n  const isAuthenticated = Boolean(user);\n  const login = async (email, password) => {\n    const {\n      data\n    } = await api.post(\"/auth/login\", {\n      email,\n      password\n    });\n    localStorage.setItem(\"ts_access_token\", data.accessToken);\n    localStorage.setItem(\"ts_user\", JSON.stringify(data.user));\n    setUser(data.user);\n  };\n  const register = async (name, email, password) => {\n    const {\n      data\n    } = await api.post(\"/auth/register\", {\n      name,\n      email,\n      password\n    });\n    localStorage.setItem(\"ts_access_token\", data.accessToken);\n    localStorage.setItem(\"ts_user\", JSON.stringify(data.user));\n    setUser(data.user);\n  };\n  const logout = async () => {\n    try {\n      await api.post(\"/auth/logout\");\n    } catch {\n      // ignore \n    } finally {\n      localStorage.removeItem(\"ts_access_token\");\n      localStorage.removeItem(\"ts_user\");\n      setUser(null);\n    }\n  };\n  useEffect(() => {\n    const onStorage = () => {\n      const raw = localStorage.getItem(\"ts_user\");\n      setUser(raw ? JSON.parse(raw) : null);\n    };\n    window.addEventListener(\"storage\", onStorage);\n    return () => window.removeEventListener(\"storage\", onStorage);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"IQR+qsi6YCMRsv0cM5XPtECR7ZA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","raw","localStorage","getItem","JSON","parse","isAuthenticated","Boolean","login","email","password","data","post","setItem","accessToken","stringify","register","name","logout","removeItem","onStorage","window","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["D:/node projects/TripSync/frontend/tripsync-frontend/src/index.js"],"sourcesContent":["// import React from 'react';\r\n// import ReactDOM from 'react-dom/client';\r\n// import './index.css';\r\n// import App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\n// const root = ReactDOM.createRoot(document.getElementById('root'));\r\n// root.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>\r\n// );\r\n\r\n\r\n//// If you want to start measuring performance in your app, pass a function\r\n//// to log results (for example: reportWebVitals(console.log))\r\n//// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n\r\n// reportWebVitals();\r\n\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\"; \r\nimport api from \"../lib/api\"; \r\nconst AuthContext = createContext(); \r\nexport function AuthProvider({ children }) { \r\n  const [user, setUser] = useState(() => { \r\n    const raw = localStorage.getItem(\"ts_user\"); \r\n    return raw ? JSON.parse(raw) : null; \r\n  }); \r\n  const isAuthenticated = Boolean(user); \r\n  const login = async (email, password) => { \r\n    const { data } = await api.post(\"/auth/login\", { email, password }); \r\n    localStorage.setItem(\"ts_access_token\", data.accessToken); \r\n    localStorage.setItem(\"ts_user\", JSON.stringify(data.user)); \r\n    setUser(data.user); \r\n  }; \r\n  const register = async (name, email, password) => { \r\n    const { data } = await api.post(\"/auth/register\", { name, email, password }); \r\n    localStorage.setItem(\"ts_access_token\", data.accessToken); \r\n    localStorage.setItem(\"ts_user\", JSON.stringify(data.user)); \r\n    setUser(data.user); \r\n  }; \r\n  const logout = async () => { \r\n    try { \r\n      await api.post(\"/auth/logout\"); \r\n    } catch { \r\n      // ignore \r\n    } finally { \r\n      localStorage.removeItem(\"ts_access_token\"); \r\n      localStorage.removeItem(\"ts_user\"); \r\n      setUser(null); \r\n    } \r\n  }; \r\n  useEffect(() => {\r\n    const onStorage = () => { \r\n      const raw = localStorage.getItem(\"ts_user\"); \r\n      setUser(raw ? JSON.parse(raw) : null); \r\n    }; \r\n    window.addEventListener(\"storage\", onStorage); \r\n    return () => window.removeEventListener(\"storage\", onStorage); \r\n  }, []); \r\n  return ( \r\n    <AuthContext.Provider value={{ isAuthenticated, user, login, register, logout }}> \r\n{children} \r\n</AuthContext.Provider> \r\n); \r\n} \r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}